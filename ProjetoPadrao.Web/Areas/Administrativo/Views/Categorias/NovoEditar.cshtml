@model ProjetoPadrao.Web.Areas.Administrativo.Models.CategoriaNovo

@{ 
    var idiomas = ViewBag.Idiomas as IQueryable<ProjetoPadrao.Dados.Entidades.Idioma>;
    var templates = ViewBag.Templates as IQueryable<ProjetoPadrao.Dados.Entidades.Template>;

    var atributos = new Dictionary<string, object> { { "class", "form-control" } };
    var atributosSomenteLeitura = new Dictionary<string, object> { { "readonly", null } };
    var atributosDesabilitado = new Dictionary<string, object> { { "disabled", null } };
    var optGroupsIdiomas = idiomas.ToDictionary(i => i.IdIdioma, i => new SelectListGroup { Name = i.Nome });
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.URL, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.URL, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.URL, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HTML, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HTML, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HTML, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ativa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Ativa)
                    @Html.ValidationMessageFor(model => model.Ativa, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdCategoriaPai, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" data-val="true" data-val-number="The field Categoria Pai must be a number." data-val-required="O campo Categoria Pai é obrigatório." id="IdCategoriaPai" name="IdCategoriaPai">
                    <option value="">Selecione uma categoria</option>
                    @foreach (var idioma in idiomas)
                    {
                    <optgroup label="@idioma.Nome" data-id-idioma="@idioma.IdIdioma">
                        @foreach (var categoria in idioma.Categorias)
                        {
                        <option value="@categoria.IdIdioma">@categoria.Nome</option>
                        }
                    </optgroup>
                    }
                </select>
                @Html.ValidationMessageFor(model => model.IdCategoriaPai, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdTemplate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IdTemplate, templates.Select(t => new SelectListItem { Value = t.IdTemplate.ToString(), Text = t.Nome }), "Selecione um template", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdTemplate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdIdioma, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IdIdioma, idiomas.Select(i => new SelectListItem { Value = i.IdIdioma.ToString(), Text = i.Nome }), "Selecione uma categoria", atributos.Concat(atributosDesabilitado).ToDictionary(a => a.Key, a => a.Value))
                @if (Model != null && Model.IdIdioma.HasValue)
                {
                    @Html.HiddenFor(model => model.IdIdioma)
                }
                @Html.ValidationMessageFor(model => model.IdIdioma, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
}
